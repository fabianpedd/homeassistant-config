#################################################################
## Automations
#################################################################


#############################
# APPLE TV DIMM DOWN
  - alias: "Apple TV Start"
    trigger:
      - platform: state
        entity_id: media_player.apple_tv
        from: 'paused'
        to: 'playing'
    condition:
      condition: and
      conditions: 
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: 'group.licht'
        state: 'on'

    action:
        service: scene.turn_on
        entity_id: scene.dimmlightsorange
# APPLE TV DIMM UP
  - alias: "Apple TV Stopp"
    trigger:
      - platform: state
        entity_id: media_player.apple_tv
        from: 'playing'
        to: 'paused'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: sun.sun
          state: 'below_horizon'
        - condition: state
          entity_id: group.licht
          state: 'on'

    action:
        service: scene.turn_on
        entity_id: scene.dimm50lights        
#############################


#############################
# Karmin auf Fernseher
  - alias: "Karmin"
    trigger:
      platform: event
      event_type: karmin

    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.apple_tv
          media_content_id: http://gutzeit.systems/mp3/fire.mp4
          media_content_type: video/mp4
      - service: media_player.turn_on
        entity_id: media_player.fernseher
      - service: media_player.select_source
        data:
          entity_id: media_player.fernseher
          source: Apple TV        
#############################



#############################
# Change Input am TV
  - alias: "inputtv"
    trigger:
      platform: event
      event_type: inputtv

    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.fernseher
          source: Apple TV
      - service: media_player.turn_on
        entity_id: media_player.fernseher        
#############################



#############################
# Mute TV
  - alias: "mutetv"
    trigger:
      platform: event
      event_type: mutetv

    action:
      - service: media_player.volume_set
        data:
          entity_id: media_player.fernseher
          volume_level: 0.0
#############################



#############################
# Twitch LIGHTS
  - alias: "Twitch TV Live ON"
    trigger:
      - platform: state
        entity_id: sensor.gutzeitgaming
        from: 'offline'
        to: 'streaming'
    condition:
      - condition: state
        entity_id: device_tracker.gerrit
        state: 'home'

    action:
        service: scene.turn_on
        entity_id: scene.lightblue     
  - alias: "Twitch TV Live OFF"
    trigger:
      - platform: state
        entity_id: sensor.gutzeitgaming
        from: 'streaming'
        to: 'offline'
    condition:
      - condition: state
        entity_id: device_tracker.gerrit
        state: 'home'

    action:
        service: scene.turn_on
        entity_id: scene.dimm50lights
#############################



#############################
# STEAM licht wenn zu Hause
  - alias: "SteamGame Light"
    trigger:
      - platform: state
        entity_id: sensor.steam_game
        from: 'None'
    condition:
      - condition: state
        entity_id: device_tracker.gerrit
        state: 'home'
    action:
        service: scene.turn_on
        entity_id: scene.lightblue
#############################



#############################
# Telegram Presence
#  - alias: "Telegram iPhone Ping"
#    trigger: 
#      - platform: state
#        entity_id: device_tracker.gerrit
#        state: 'home'
#        for:
#          minutes: 1
#    action: 
#        service: notify.telegram
#        data:
#          message: "iPhone ist im WLAN GutzeitNET 5, set state to home!"
#  - alias: "Telegram iPhone Ping fail"
#    trigger: 
#      - platform: state
#        entity_id: device_tracker.gerrit
#        state: 'not_home'
#        for:
#          minutes: 2
#    action: 
#        service: notify.telegram
#        data:
#          message: "iPhone ist im nicht im WLAN, set state to not home!"
#############################


#############################
# Telegram Home Start
  - alias: "Start Hass Telegram"
    trigger:
      platform: event
      event_type: homeassistant_start
    action: 
        service: notify.telegram
        data:
          message: "Home Assistant ist gestartet. Config nicht verkackt. Sende den Befehl /start für die Commands."
#############################



#############################
# Presence Heating
## Heating ON
  - alias: "Gerrit zuhause Heizung ON"
    trigger:
      platform: state
      entity_id: device_tracker.gerrit
      state: 'home' 
    action:
        service: climate.set_temperature
        data:
          temperature: 20
#
## Heating OFF
  - alias: "Gerrit zuhause Heizung OFF"
    trigger:
      platform: state
      entity_id: device_tracker.gerrit
      state: 'not_home' 
    action:
        service: climate.set_temperature
        data:
          temperature: 17
##############################

#Alarm Alexa
  - alias: "alarmalexa"
    trigger:
      platform: event
      event_type: alarm
    action:
      - service: script.strand
        data:
          state: on
      - service: climate.set_temperature
        entity_id: climate.bad
        data:
          temperature: 23

##############################
#Telegram Test
  - alias: "telegram bot that reply pong to ping"
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/ping'
    action:
      - service: notify.telegram
        data:
          message: 'pong2'     

#Help
  - alias: "help telegram"
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/help'
    action:
      - service: notify.telegram
        data:
          message: 'Start the bot with /start. Based on Home Assistant. Version v.0.1 of http://gutzeit.systems Telegram Bot.'

#Telegram Commands
###MENÜ
  - alias: "Telegram Start /"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/start'
    action:
      - service: notify.telegram
        data:
          message: 'Los gehts:'
          data:
            keyboard:
              - '/light, /media, /climate'
              - '/help'          

  - alias: "Telegram TV keyboard"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/tv'
    action:
      - service: notify.telegram
        data:
          message: 'Available TV commands:'
          data:
            keyboard:
              - '/tvon, /tvoff'
              - '/inputappletv, /inputlivetv, /inputyoutube'              
              - '/start'  


  - alias: "Telegram Light keyboard"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/light'
    action:
      - service: notify.telegram
        data:
          message: 'Available Light commands:'
          data:
            keyboard:
              - '/lighton, /lightoff, /lightedit'  
              - '/seclighton, /seclightoff, /blue'  
              - '/start'  


  - alias: "Media Telegram keyboard"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/media'
    action:
      - service: notify.telegram
        data:
          message: 'Available /media commands:'
          data:
            keyboard:
              - '/tv, /ambiance'  
              - '/hold, /hold2'  
              - '/start'  

  - alias: "ambiance Telegram keyboard"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/ambiance'
    action:
      - service: notify.telegram
        data:
          message: 'Available /ambiance commands:'
          data:
            keyboard:
              - '/kamin, /strand'  
              - '/regenwald, /stoptv'  
              - '/start'  

  - alias: "climate Telegram keyboard"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/climate'
    action:
      - service: notify.telegram
        data:
          message: 'Available /climate commands:'
          data:
            keyboard:
              - '/con22, /con20, /con17'  
              - '/start'  

####BEFEHL

###############################################################
###TV Telegram Commands
#Telegram TV ON
  - alias: "tv on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/tvon' 
    action:
      - service: media_player.turn_on
        entity_id: media_player.fernseher       
      - service: notify.telegram
        data:
          message: 'Fernseher ist an.'     
#Telegram TV OFF
  - alias: "tv off telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/tvoff' 
    action:
      - service: media_player.turn_off
        entity_id: media_player.fernseher             
      - service: notify.telegram
        data:
          message: 'Fernseher ist aus.'  


#Input AppleTV ON
  - alias: "appletv on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/inputappletv' 
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.fernseher       
          source: 'Apple TV'
      - service: notify.telegram
        data:
          message: 'Fernseher ist auf Apple TV.'    

#Input LiveTV ON
  - alias: "Livetv on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/inputlivetv' 
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.fernseher       
          source: 'LiveTV'
      - service: notify.telegram
        data:
          message: 'Fernseher ist auf Live TV.'        

#Input Youtube ON
  - alias: "youtbe on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/inputyoutube' 
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.fernseher       
          source: 'YouTube'
      - service: notify.telegram
        data:
          message: 'Fernseher ist auf YouTube.'                  
###############################################################

##LIGHT Telegram Commands
###############################################################
#Telegram Light on
  - alias: "light on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/lighton' 
    action:
      - service: light.hue_activate_scene
        data:
          group_name: 'Gerrits Zimmer'
          scene_name: 'Warmes Licht'       
      - service: notify.telegram
        data:
          message: 'Licht ist an.'     

#Telegram Light off
  - alias: "light off telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/lightoff' 
    action:
      - service: light.turn_off     
        data:
          entity_id: group.licht
      - service: notify.telegram
        data:
          message: 'Licht ist aus.'     

#Telegram secLight on
  - alias: "seclight on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/seclighton' 
    action:
      - service: light.turn_on     
        data:
          entity_id: group.nebenraum
          brightness: 200
          color_temp: 460
      - service: notify.telegram
        data:
          message: 'Nebnraum Licht ist an.'     

#Telegram secLight off
  - alias: "seclight off telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/seclightoff' 
    action:
      - service: light.turn_off     
        data:
          entity_id: group.nebenraum
      - service: notify.telegram
        data:
          message: 'Nebenraum Licht ist aus.'

#light on edit
  - alias: "light edit telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/lightedit' 
    action:
      - service: light.hue_activate_scene
        data:
          group_name: 'Gerrits Zimmer'
          scene_name: 'Edit'       
      - service: notify.telegram
        data:
          message: 'Licht ist auf die Szene Edit gestellt.'       

#light blue
  - alias: "light gaming telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/blue' 
    action:
      - service: light.hue_activate_scene
        data:
          group_name: 'Gerrits Zimmer'
          scene_name: 'Gaming'       
      - service: notify.telegram
        data:
          message: 'Licht ist auf die Szene Gaming gestellt.'                          
###############################################################



###############################################################
###Ambiance Telegram
#Telegram kamin ON
  - alias: "kamin on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/kamin' 
    action:
      - service: script.fire
        data:
          state: on      
      - service: notify.telegram
        data:
          message: 'Kamin Ambiente ist an.'     

#Telegram strand ON
  - alias: "strand on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/strand' 
    action:
      - service: script.strand
        data:
          state: on      
      - service: notify.telegram
        data:
          message: 'Strand Ambiente ist an.'     

#Telegram regenwald ON
  - alias: "regenwald on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/regenwald' 
    action:
      - service: script.regen
        data:
          state: on      
      - service: notify.telegram
        data:
          message: 'Regenwald Ambiente ist an.'     

#Telegram stoptv ON
  - alias: "stoptv on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/stoptv' 
    action:
      - service: script.stoptv
        data:
          state: on      
      - service: notify.telegram
        data:
          message: 'Nix mehr Videos auf TV.'     
###############################################################


###############################################################
####Climate Telegram
  - alias: "climate22 on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/con22' 
    action:
      - service: climate.set_temperature
        data:
          temperature: 22      
      - service: notify.telegram
        data:
          message: 'Die Thermostate im Badezimmer und Küche sind auf 22C°.'     

  - alias: "climate20 on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/con20' 
    action:
      - service: climate.set_temperature
        data:
          temperature: 20      
      - service: notify.telegram
        data:
          message: 'Die Thermostate im Badezimmer und Küche sind auf 20C°.'

  - alias: "climate17 on telegram"
    trigger:
      platform: event
      event_type: telegram.command
      event_data:
        command: '/con17' 
    action:
      - service: climate.set_temperature
        data:
          temperature: 17      
      - service: notify.telegram
        data:
          message: 'Die Thermostate im Badezimmer und Küche sind auf 17C°. Kalt!'


#################################################################
#################################################################
####  _    ___     _______  ______ _____  _____ ____  _   _  ####
#### | |  | \ \   / /  __ \|  ____|  __ \|_   _/ __ \| \ | | ####
#### | |__| |\ \_/ /| |__) | |__  | |__) | | || |  | |  \| | ####
#### |  __  | \   / |  ___/|  __| |  _  /  | || |  | | . ` | ####
#### | |  | |  | |  | |    | |____| | \ \ _| || |__| | |\  | ####
#### |_|  |_|  |_|  |_|    |______|_|  \_\_____\____/|_| \_| ####
####                                                         ####
#################################################################
###HYPERION

  - alias: "Fernseher An Ambilight"
    trigger:
      - platform: state
        entity_id: media_player.fernseher
        from: 'off'
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.hyperion

  - alias: "Fernseher An Ambilight"
    trigger:
      - platform: state
        entity_id: media_player.fernseher
        to: 'off'
    action:
      - service: light.turn_on
        data:
          entity_id: light.hypergutzeitpi         



  - alias: "Knight Rider"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Knight Rider"
    action:
      - service: shell_command.h_knight_rider

  - alias: "Knight Rider Blue"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Knight Rider Blue"
    action:
      - service: shell_command.h_knight_rider_blue

  - alias: "Knight Rider Red Slow"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Knight Rider Red Slow"
    action:
      - service: shell_command.h_knight_rider_reds

  - alias: "Knight Rider Blue Slow"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Knight Rider Blue Slow"
    action:
      - service: shell_command.h_knight_rider_blues

  - alias: "Mood Blobs Cold"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Mood Blobs Cold"
    action:
      - service: shell_command.h_mood_blobs_cold    

  - alias: "Rainbow Swirl"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Rainbow Swirl"
    action:
      - service: shell_command.h_rainbow_swirl

  - alias: "Snake"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Snake"
    action:
      - service: shell_command.h_snake

  - alias: "Police Lights Single"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Police Lights Single"
    action:
      - service: shell_command.h_police_lights_single

  - alias: "Police Lights Solid"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Police Lights Solid"
    action:
      - service: shell_command.h_police_lights_Solid

  - alias: "Hyper OFF"
    trigger:
      platform: state
      entity_id: input_select.hyperion_effect
      state: "Off"
    action:
      - service: shell_command.h_hyperion_off






#### OLD 
#  - alias: "play event notify"
#    trigger:
#      - platform: state
#        entity_id: media_player.apple_tv
#        from: 'paused'
#        to: 'playing'
#    action:
#      service: notify.fernseher
#      data:
#        message: "Apple TV Wiedergabe erkannt! Dimm Lights down!"
